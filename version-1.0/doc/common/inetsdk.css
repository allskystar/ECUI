/*clsErrUnexpected - a code path was hit unexpectedly in the templateclsBadDesc - bad or missing descriptionclsBadXREF - the specified xref rid doesn't exist in the targets dbclsBadTERM - the specified term rid doesn't exist in the glossary dbclsBadTLA - the specified tla rid doesn't exist in the acronym dbclsBadXrefPN - the user requested the persisted name, but the xref doesn't have one.clsBadXrefRN - the user requested the runtime name, but the xref doesn't have one.clsBadParam - bad parameter markupclsBadInRef - bad internal reference to a parameter (tenative name)clsBadPV - bad possible value (pv) formatting within a <param>clsBadShowMe - invalid showme idclsBadLocalLink - the specified local link doesn't exist in the documentclsBadOutlineLoc - the outline tag was placed in a bad locationclsBadFragId - the specified fragment identifier (@fid) is invalidclsBadPRef - the specified parameter id (pid) is invalidclsBadMRef - the specified member id (mid) is invalidclsBadConstRef - the specified constant id (cid) is invalidclsNotImpl - the feature is not yet implementedclsBadRetCode - bad retcode;(@name $and$ desc) or (@rid) wasn't specifiedclsUndefinedType - the rid associated with the dtype tag could not be found in the dtypes collectionclsBadAttrDesc - must spec desc or literal pvs for attributeclsBadFlag - the flag was not found or is missing the name attribute or desc childclsBadTopicType - the metadata/@type is unrecognizedclsNoObject - the method, property, or event doesn't specify an object in the applies sectionclsBadPVRef - bad possible value referenceclsBadAttrRef - bad reference to an attribute of an elementclsNoDISPID - missing DISPID on iface tag;this is primarily used in event pages when transformed through C++ event templateclsBadCVRef - baaahhhhd composite value referenceclsBadImg - bad image referenceclsBadVARIANT - vtypes weren't specified within a dtype of type VARIANTclsBadSTD - bad logic in specifying the attributes of a standards element.clsBadReg - registry entry that needs to be formatted in a tree view, but not marked that way...*/SPAN.clsBadXREF, SPAN.clsBadTERM, SPAN.clsBadTLA, SPAN.clsBadXrefPN, SPAN.clsBadXrefRN, SPAN.clsBadDesc,SPAN.clsBadParam, SPAN.clsBadRetVal, SPAN.clsBadInRef, SPAN.clsBadPV, SPAN.clsBadShowMe, SPAN.clsBadLocalLink,SPAN.clsErrUnexpected, SPAN.clsBadOutlineLoc, SPAN.clsBadFragId, SPAN.clsBadPRef, SPAN.clsBadMRef, SPAN.clsBadConstRef, SPAN.clsNotImpl,SPAN.clsBadRetCode, SPAN.clsUndefinedType, SPAN.clsBadAttrDesc, SPAN.clsBadFlag, SPAN.clsBadTopicType, SPAN.clsNoObject,SPAN.clsBadPVRef, SPAN.clsNoDISPID, SPAN.clsBadAttrRef, SPAN.clsBadCVRef, SPAN.clsBadImg, SPAN.clsBadVARIANT, SPAN.clsBadSTD, SPAN.clsBadReg  {background-color:red}DIV.clsSideBar {position:relative;font-size:10pt;font-style:italic;float:right;width:100px;background-color:yellow }/* In PSDK, m-left=14;m-right=12;They also use a P, but MSTP recommends 1 note w/ multiple Ps rather than individual notes  */DIV.clsNote {margin-bottom: 4pt;background-color: #EEEEEE;}DIV.clsAPIList {margin-left : 20px;}DIV.clsAPIListDesc {margin-top: 5px;margin-bottom: 10px }DIV.clsAPIItem {margin-left : 20px;margin-bottom: 5px;}SPAN.clsFmtLib, SPAN.clsFmtInc, SPAN.clsFmtIDL, SPAN.clsFmtDLL {text-transform:lowercase }SPAN.clsFlag {}P.clsRef {font-weight:bold;margin-top:12pt;margin-bottom:0em;}.clsTab{font: bold 100% verdana,arial,helvetica,sans-serif;cursor:hand;color:#FFFFFF;background-color:#3366CC;}TABLE.clsStd TH {text-align:left;vertical-align:top;background-color:#DDD;padding:2px;}TABLE.clsStd TD {vertical-align:top;background-color:#EEE;padding:2px;}DIV.clsBeta {font-weight:bold;color:red;margin-top:0.5em;margin-bottom:0.5em;}.clsWhatsNew {background-color:#FFFFCC;padding-top:10px;padding-right:10px;padding-left:10px;border-top:1px solid gold;border-bottom:1px solid gold;}